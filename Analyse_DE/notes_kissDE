INPUT = comptages des reads pour chaque variant et chaque condition.
Jeu de données peut être divisé en 2 en cas d'épissage : 
- inclusion de l'intron (type de jonction 1)
- exclusion de l'intron (type de jonction 2)

OUTPUT = p-value ajustée et mesure (Df/Dpsi) qui indique la magnitude de l'effet.


########## FORMAT DES DONNEES ###########
########## Table comptage bruts #########

myCounts <- dataframekissDE
> myCounts
Name_event Length R1 R2 R3 R4 C1 C2 C3 C4 U1 U2 U3 U4
variant1_type_jontion1 X X X X X X X X X X X X
variant1_type_jonction2 X X X X X X X X X X X X
variant2_type_jonction1 X X X X X X X X X X X X
variant2_type_jonction2 X X X X X X X X X X X X
variant3_type_jonction1 X X X X X X X X X X X X
variant3_type_jonction2 X X X X X X X X X X X X
...

#Name_event : nom de la jonction qui permet de l'identifier
#1 variant = 2 lignes (une ligne par type de jonction (incluant et excluant l'intron))
#Length : longueur de la jonction
#R1 à R4 : comptages pour la condtions R des 4 réplicats
#C1 à C4 : comptages pour la condtions C des 4 réplicats
#U1 à U4 : comptages pour la condtions U des 4 réplicats

########## Vecteurs des conditions ##########

>myConditions
myConditions <- c(rep("condition_R", 4), rep("condition_C", 4), rep("condition_U", 4))



################## TEST ###################
finalTable <- diffExpressedVariants (myCounts, myConditions, pvalue=1)


#NORMALISATION  DES COMPTAGES
Comme DESeq

#FILTRATION FAIBLES COMPTAGES AVANT LES TEST
filterLowCountsVariants : valeur par défaut = comptages <10




